a.length
a.push (function)
"javascript list" functions
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array
	https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at

======================================

my_list = ['a', 'b', 'c']

my_list.slice(1) -> ['b', 'c']

[ 'a', 'b', 'c' ]
 |    |    |   |   
 0    1    2   3

mylist.slice(0,2) -> ['a', 'b']

my_lambda = (x) => x + 5
my_lambda(10) -> 15

======================================

Logical Operators:

And: && (Only works for booleans (true/false))
Example:
    a = true
    b = false
    a && b -> false

Or: || (Only works for booleans (true/false))
Example:
    a = true
    b = false
    a && b -> true

Not: ! (Only works for booleans (true/false))
Example:
    a = true
    !a -> false

Equals: ===
Example:
    a = 100
    b = 100
    a === b -> false

Not Equals: !==
Example:
    a = 100
    b = 100
    a !== b -> false

element > 10 && element < 45 && element !== 44

======================================

recipe = {
    name: "My Big Regret"
    ingredients: [
        "One shot vodka",
        "1/2 Ounce My Tears",
    ]
    tags: [ "Rainy days" ]
}

recipe.name -> "My Big Regret"
recipe.ingredients[1] -> "1/2 Ounce My Tears"
recipe.tags[0] -> "Rainy days"

b = {
    name: "Big music fest",
    dates: {
        start_day: "Monday"
        end_day: "Saturday"
    },
}

b.dates[1] <- only valid if it's a list
b.dates.end_day <- returns "end_day" string; in this case, "Saturday"
b.dates.end_day = "Thursday" <- equal to below line
b.dates["end_day"] = "Thursday" <- ""



recipes = `
    [Recipes content here]
`
yaml = require("js-yaml")

========================

INGREDIENTS:

[] RYE  
    [] BUFFALO TRACE
    [] RITTENHOUSE RYE
        [] CHAMOMILE-INFUSED RITTENHOUSE RYE
    [] MAKER'S MARK

[] BOURBON
    [] 

[] AMARI
    
likely going to categorize all ingredients manually in separate file

===

put in "rules" for searching ingredients (i.e. "syrup", etc)

==============

filter search by: 
    ingredients
    sources
    tags
    authors
    etc?

venn diagram of spirits? (per walt)
    mlik&honey style?
        i.e. https://m.media-amazon.com/images/I/71FOD0hLwVL.jpg

toggle between additive and subtractive search ("at least X" vs "only X")

ability to "save" ingredient selections (i.e. current bar items, things 4 tiki drinks, etc)

add tags in-UI

in recipes w/ special ingredients, way to show special ingredients steps/etc, per book/source (i.e. specs from PUNCH only show things from source PUNCH etc)

categorize tags (currently include methods, types, bars, classics, etc; would like to break down like so:)

    method / notes:
        shaken
        citrus
        sparkling
        stirred
    bar:
        death & co
        dead rabbit
        nitecap
    format:
        negroni
        manhattan
        low-abv
    etc etc etc

"food" tab? (lmao where would bitters recipes go)

"index", in which ingredients are shown; maybe w/ descriptions & "used in <x> many recipes / used in <x>"?

tsp-tbsp? batching up

checkboxes: 
	overflow-y: scroll;


recipe items of <x> size
when you click on them, increase <x> to <y> and add add'l metadata
click again -> return to orig. size

https://developer.mozilla.org/en-US/docs/Web/CSS/border-style
https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flow_Layout/Block_and_Inline_Layout_in_Normal_Flow
https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flow_Layout/Flow_Layout_and_Overflow

html > content
css > layout & theming

pick a width for the sidebar

----

PREP METHOD / STYLE:

    shaken 
    stirred
    heated
    caffeinated
    room temperature
    freezer bar

SOURCE:

    PUNCH  
    Amaro
    Bitters

----

"svelte conditional classes"

"css click event"

https://stackoverflow.com/questions/14319274/change-css-properties-on-click

when click on item, expand down to next row to keep others in spot? (?)

----

object -> each key = unicode; other side (value) = fraction
lookup: call object and get key

----

"show up only when X" -> "conditional <x> (div, style, etc.)"
